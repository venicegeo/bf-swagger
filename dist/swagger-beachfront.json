{
    "swagger": "2.0",
    "info": {
        "title": "Beachfront",
        "description": "Beachfront Core Services API",
        "version": "v0"
    },
    "host": "bf-api.geointservices.io",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "parameters": {
        "AuthAPIKey": {
            "name": "Authorization",
            "description": "Basic authentication with the session token as the User and no password\n",
            "in": "header",
            "required": true,
            "type": "string"
        },
        "AuthUsernameAndPassword": {
            "name": "Authorization",
            "description": "Basic authentication with username and password\n",
            "in": "header",
            "required": true,
            "type": "string"
        }
    },
    "paths": {
        "/": {
            "get": {
                "description": "Get basic system health",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A hash of UI-pertinent information",
                        "schema": {
                            "$ref": "#/definitions/ResponseUIData"
                        }
                    }
                },
                "tags": [
                    "System"
                ]
            }
        },
        "/login": {
            "get": {
                "description": "Start a new Beachfront user session",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/AuthUsernameAndPassword"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New session token",
                        "schema": {
                            "$ref": "#/definitions/ResponseSessionCreated"
                        }
                    }
                },
                "tags": [
                    "UI"
                ]
            }
        },
        "/v0/user": {
            "get": {
                "description": "Returns information pertinent to the Beachfront UI",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A hash of UI-pertinent information",
                        "schema": {
                            "$ref": "#/definitions/ResponseUIData"
                        }
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    }
                },
                "tags": [
                    "UI"
                ]
            }
        },
        "/v0/algorithm": {
            "get": {
                "description": "List all available algorithms",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of algorithms",
                        "schema": {
                            "$ref": "#/definitions/ResponseListAlgorithms"
                        }
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    }
                },
                "tags": [
                    "Algorithm"
                ]
            }
        },
        "/v0/algorithm/{algorithm_id}": {
            "get": {
                "description": "Get specific algorithm",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "algorithm_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single algorithm",
                        "schema": {
                            "$ref": "#/definitions/ResponseGetAlgorithm"
                        }
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    },
                    "404": {
                        "description": "Algorithm does not exist"
                    }
                },
                "tags": [
                    "Algorithm"
                ]
            }
        },
        "/v0/job": {
            "get": {
                "description": "List all jobs for authenticated user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of jobs",
                        "schema": {
                            "$ref": "#/definitions/ResponseListJobs"
                        }
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "post": {
                "description": "Create job",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Request Body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/RequestCreateJob"
                        }
                    },
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New job",
                        "schema": {
                            "$ref": "#/definitions/ResponseGetJob"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/v0/job/{job_id}": {
            "get": {
                "description": "List all jobs for authenticated user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single job",
                        "schema": {
                            "$ref": "#/definitions/ResponseGetJob"
                        }
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    },
                    "404": {
                        "description": "Job does not exist"
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "delete": {
                "description": "Remove a job from authenticated user's tracking list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job removed from tracking list",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    },
                    "404": {
                        "description": "Job does not exist"
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/v0/job/{job_id}.geojson": {
            "get": {
                "description": "Download shoreline detections for job",
                "produces": [
                    "application/vnd.geo+json",
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GeoJSON FeatureCollection"
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    },
                    "404": {
                        "description": "Job does not exist"
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/v0/job/by_scene/{scene_id}": {
            "get": {
                "description": "List all jobs which have processed a given scene",
                "parameters": [
                    {
                        "name": "scene_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of jobs",
                        "schema": {
                            "$ref": "#/definitions/ResponseListJobsBySceneID"
                        }
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/v0/job/by_productline/{productline_id}": {
            "get": {
                "description": "List all jobs which have been processed under a given product line",
                "parameters": [
                    {
                        "name": "productline_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "A date cutoff A valid ISO8601 timestamp (if blank, defaults to date of product line creation)"
                    },
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of jobs",
                        "schema": {
                            "$ref": "#/definitions/ResponseListJobsByProductLineID"
                        }
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/v0/productline": {
            "get": {
                "description": "List all product lines in the system",
                "parameters": [
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of product lines",
                        "schema": {
                            "$ref": "#/definitions/ResponseListProductLines"
                        }
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    }
                },
                "tags": [
                    "Product Line"
                ]
            },
            "post": {
                "description": "Create a new product line",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Request Body",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/RequestCreateProductLine"
                        }
                    },
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of product lines",
                        "schema": {
                            "$ref": "#/definitions/ResponseListProductLines"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    }
                },
                "tags": [
                    "Product Line"
                ]
            }
        },
        "/v0/productline/{productline_id}": {
            "delete": {
                "description": "Delete a productline",
                "parameters": [
                    {
                        "name": "productline_id",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product line deleted",
                        "schema": {
                            "$ref": "#/definitions/ResponseListProductLines"
                        }
                    },
                    "400": {
                        "description": "Missing `Authorization` header"
                    },
                    "401": {
                        "description": "User session has expired"
                    }
                },
                "tags": [
                    "Product Line"
                ]
            }
        },
        "/v0/scene/event/harvest": {
            "post": {
                "deprecated": true,
                "description": "React to a \"scene harvested\" event from the legacy Beachfront image catalog",
                "parameters": [
                    {
                        "name": "Request Body",
                        "schema": {
                            "properties": {
                                "__signature__": {
                                    "type": "string",
                                    "description": "Authenticity signature for the event"
                                },
                                "scene_id": {
                                    "type": "string",
                                    "description": "ID of the scene that was just harvested"
                                },
                                "captured_on": {
                                    "type": "string",
                                    "description": "ISO8601 timestamp when the scene was captured by the sensor"
                                },
                                "cloud_cover": {
                                    "type": "number",
                                    "description": "The cloud cover value for the scene"
                                },
                                "min_x": {
                                    "type": "number",
                                    "description": "The minimum-x value of the scene's bounding box"
                                },
                                "min_y": {
                                    "type": "number",
                                    "description": "The minimum-y value of the scene's bounding box"
                                },
                                "max_x": {
                                    "type": "number",
                                    "description": "The maximum-x value of the scene's bounding box"
                                },
                                "max_y": {
                                    "type": "number",
                                    "description": "The maximum-y value of the scene's bounding box"
                                }
                            }
                        },
                        "required": true,
                        "in": "body"
                    },
                    {
                        "$ref": "#/parameters/AuthAPIKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scene event accepted or discarded",
                        "schema": {
                            "$ref": "#/definitions/ResponseListProductLines"
                        }
                    },
                    "400": {
                        "description": "Inputs are malformed"
                    },
                    "401": {
                        "description": "Event is untrusted"
                    }
                },
                "tags": [
                    "Product Line"
                ]
            }
        }
    },
    "definitions": {
        "Algorithm": {
            "type": "object",
            "description": "An algorithm capable of shoreline detection.\n",
            "properties": {
                "bands": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Short identifier for which spectral bands an algorithm requires."
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Brief explanation of an algorithm written in analyst-friendly terminology."
                },
                "interface": {
                    "type": "string",
                    "description": "Identifier which determines the input parameters for an algorithm."
                },
                "max_cloud_cover": {
                    "type": "integer",
                    "description": "Cloud cover value above which an algorithm ceases to produce useful results."
                },
                "name": {
                    "type": "string",
                    "description": "Short analyst-friendly name for an algorithm."
                },
                "service_id": {
                    "type": "string",
                    "description": "Piazza Service ID for an algorithm."
                },
                "url": {
                    "type": "string",
                    "description": "Execution URL for an algorithm."
                },
                "version": {
                    "type": "string",
                    "description": "Current version of the algorithm."
                }
            }
        },
        "Job": {
            "type": "object",
            "description": "A basic GeoJSON Feature representation of a Beachfront Job.\n",
            "properties": {
                "geometry": {
                    "type": "object"
                },
                "id": {
                    "type": "string",
                    "description": "Job ID"
                },
                "properties": {
                    "type": "object",
                    "properties": {
                        "algorithm_name": {
                            "type": "string",
                            "description": "Name of the algorithm used to process this job"
                        },
                        "algorithm_version": {
                            "type": "string",
                            "description": "Version of the algorithm used to process this job",
                            "example": "0.0"
                        },
                        "created_by": {
                            "type": "string",
                            "description": "Username of the person who initiated the job"
                        },
                        "created_on": {
                            "type": "string",
                            "description": "ISO8601 timestamp of when this job was created"
                        },
                        "name": {
                            "type": "string",
                            "description": "User-defined name for this job"
                        },
                        "scene_capture_date": {
                            "type": "string",
                            "description": "ISO8601 timestamp of when the scene processed by this job was captured"
                        },
                        "scene_id": {
                            "type": "string",
                            "description": "ID of the scene this job was processed against"
                        },
                        "status": {
                            "type": "string",
                            "description": "Status of this job"
                        },
                        "tide": {
                            "type": "number",
                            "description": "Predicted tide level for the centroid of this scene"
                        },
                        "tide_min_24h": {
                            "type": "number",
                            "description": "Prediction lower bound tide level for this centroid of this scene"
                        },
                        "tide_max_24h": {
                            "type": "number",
                            "description": "Prediction upper bound tide level for this centroid of this scene"
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ProductLine": {
            "type": "object",
            "description": "A basic GeoJSON Feature representation of a Beachfront Product Line.\n",
            "properties": {
                "geometry": {
                    "type": "object"
                },
                "id": {
                    "type": "string",
                    "description": "Product Line ID"
                },
                "properties": {
                    "type": "object",
                    "properties": {
                        "algorithm_name": {
                            "type": "string",
                            "description": "Name of the algorithm chosen for this product line"
                        },
                        "category": {
                            "type": "string",
                            "description": "User-definted category for this product line",
                            "example": "0.0"
                        },
                        "created_by": {
                            "type": "string",
                            "description": "Username of the person who created the product line"
                        },
                        "created_on": {
                            "type": "string",
                            "description": "ISO8601 timestamp of when this product line was created"
                        },
                        "max_cloud_cover": {
                            "type": "integer",
                            "description": "Maximum cloud cover value for filtering input scenes for this product line"
                        },
                        "name": {
                            "type": "string",
                            "description": "User-defined name for this product line"
                        },
                        "spatial_filter_id": {
                            "type": "string",
                            "description": "ID of the spatial filter used to filter scenes"
                        },
                        "start_on": {
                            "type": "string",
                            "description": "ISO8601 timestamp of when this product line should begin"
                        },
                        "stop_on": {
                            "type": "string",
                            "description": "ISO8601 timestamp of when this product line should begin"
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "RequestCreateJob": {
            "type": "object",
            "properties": {
                "algorithm_id": {
                    "type": "string",
                    "description": "Service ID of the algorithm chosen for this product line"
                },
                "scene_id": {
                    "type": "string",
                    "description": "ID of the Scene to be processed"
                },
                "name": {
                    "type": "string",
                    "description": "User-defined name to use for this job"
                }
            }
        },
        "RequestCreateProductLine": {
            "type": "object",
            "properties": {
                "algorithm_id": {
                    "type": "string",
                    "description": "Service ID of the algorithm chosen for this product line"
                },
                "category": {
                    "type": "string",
                    "description": "User-defined category for this product line"
                },
                "min_x": {
                    "description": "minimum-x valueof bounding box for filtering input scenes for this product line",
                    "type": "number",
                    "format": "float"
                },
                "min_y": {
                    "type": "number",
                    "description": "Minimum-Y value of bounding box for filtering input scenes for this product line"
                },
                "max_x": {
                    "type": "number",
                    "description": "Maximum-X value of bounding box for filtering input scenes for this product line"
                },
                "max_y": {
                    "type": "number",
                    "description": "Maximum-Y value of bounding box for filtering input scenes for this product line"
                },
                "max_cloud_cover": {
                    "type": "integer",
                    "description": "Maximum cloud cover value for filtering input scenes for this product line"
                },
                "name": {
                    "type": "string",
                    "description": "User-defined name for this product line"
                },
                "spatial_filter_id": {
                    "type": "string",
                    "description": "ID of the spatial filter for filtering input scenes for this product line (not currently used)"
                },
                "start_on": {
                    "type": "string",
                    "description": "ISO8601 timestamp specifying when this product line should activate"
                },
                "stop_on": {
                    "type": "string",
                    "description": "If not null, must be an ISO8601 timestamp specifying when this product line should deactivate"
                }
            }
        },
        "ResponseGetAlgorithm": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "$ref": "#/definitions/Algorithm"
                }
            }
        },
        "ResponseGetJob": {
            "type": "object",
            "properties": {
                "job": {
                    "$ref": "#/definitions/Job"
                }
            }
        },
        "ResponseListAlgorithms": {
            "type": "object",
            "properties": {
                "algorithms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Algorithm"
                    }
                }
            }
        },
        "ResponseListJobs": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "object",
                    "description": "GeoJSON FeatureCollection",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "features": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                }
            }
        },
        "ResponseListJobsBySceneID": {
            "type": "object",
            "properties": {
                "scene_id": {
                    "type": "string"
                },
                "jobs": {
                    "type": "object",
                    "description": "GeoJSON FeatureCollection",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "features": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                }
            }
        },
        "ResponseListJobsByProductLineID": {
            "type": "object",
            "properties": {
                "productline_id": {
                    "type": "string"
                },
                "since": {
                    "type": "string",
                    "description": "ISO8601 timestamp of the earliest execution date desired"
                },
                "jobs": {
                    "type": "object",
                    "description": "GeoJSON FeatureCollection",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "features": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                }
            }
        },
        "ResponseListProductLines": {
            "type": "object",
            "properties": {
                "productlines": {
                    "type": "object",
                    "description": "GeoJSON FeatureCollection",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "features": {
                            "$ref": "#/definitions/ProductLine"
                        }
                    }
                }
            }
        },
        "ResponseSessionCreated": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                }
            }
        },
        "ResponseUIData": {
            "type": "object",
            "properties": {
                "profile": {
                    "type": "object",
                    "properties": {
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "services": {
                    "type": "object",
                    "properties": {
                        "catalog": {
                            "type": "string",
                            "description": "Base URL for the Beachfront image catalog."
                        },
                        "wms_server": {
                            "type": "string",
                            "description": "Base URL for the Beachfront WMS server."
                        }
                    }
                }
            }
        }
    }
}
